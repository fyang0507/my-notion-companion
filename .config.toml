# model path
model_path = '/Users/fred/Documents/models'

# model mapping
model.'baichuan-inc/Baichuan-7B' = 'baichuan2-7b-chat.Q4_K_S.gguf'
model.'hfl/chinese-alpaca-2-7b' = 'chinese-alpaca-2-7b-q4_0.gguf'
model.'Qwen/Qwen-7B-Chat' = 'Qwen-7B-Chat.Q4_K_M.gguf'
model.'01-ai/Yi-6B-Chat' = 'yi-chat-6b.Q4_K_M.gguf'
# model.'BAAI/AquilaChat2-7B-16K' = 'AquilaChat2-7B-16K.Q4_0.gguf' # BUG: can't be loaded into llama.cpp
model.'HuggingFaceH4/zephyr-7b-beta' = 'zephyr-7b-beta.Q4_K_M.gguf'


# LLM params
# ref: https://python.langchain.com/docs/guides/local_llms
# ref: https://github.com/langchain-ai/langchain/blob/master/libs/community/langchain_community/llms/llamacpp.py
llm.n_gpu_layers = 1 # number of layer to be loaded in GPU. 1 is often sufficient
llm.n_batch = 512 # batch size, number of tokens the model should process in parallel, should be between 1 and n_ctx, depend on the amount of RAM of Apple Silicon Chip.
llm.n_ctx = 2048 # context size
llm.temperature = 0.0
llm.f16_kv = true # Metal only supports True. Used to be a bug, see https://github.com/langchain-ai/langchain/pull/3320#issue-1679133618
# customized
llm.conversation.k_rounds = 5 # number of rounds of conversations to keep in memory 


# Documents metadata
# TODO: depend on the self-query results, maybe consider add Chinese description as well
metadata.author.description = "THe author of the article."
metadata.author.type = "string"

metadata.date_start.description = "The date the article was created. In YYYY-MM-DD format."
metadata.date_start.type = "string"

metadata.date_end.description = "The date the article was completed. In YYYY-MM-DD format."
metadata.date_end.type = "string"

metadata.id.description = "The id of the text."
metadata.id.type = "string"

metadata.name.description = "The name of the article."
metadata.name.type = "string"

metadata.source.description = "The source of the article, representing the name of the Notion database it was retrieved"
metadata.source.type = "string"

metadata.tags.description = "The different tags for an article, can represent its genre, origination, or belonged series."
metadata.tags.type = "string"