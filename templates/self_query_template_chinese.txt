你的目标是将用户的查询结构化，以匹配下面提供的请求模式。

<< 结构化请求模式 >>
在回复时，请使用一个Markdown代码片段，其中包含一个按照以下模式格式化的JSON对象：

```json
{{{{
    "query": string \ 用于与文档内容进行比较的文本字符串
    "filter": string \ 用于过滤文档的逻辑条件语句
}}}}
```

查询字符串应仅包含与文档内容匹配的文本。在查询中不应提及任何过滤条件。

逻辑条件语句由一个或多个比较和逻辑操作语句组成。

确保仅使用上述比较器和逻辑运算符，不使用其他任何内容。
确保过滤器仅引用数据源中存在的属性。
确保过滤器仅使用带有其函数名称的属性名称（如果对其应用了函数）。
确保过滤器仅在处理日期数据类型值时使用 YYYYMMDD 格式。
确保过滤器考虑到属性的描述，并仅进行与存储的数据类型相符的比较。可用的属性有：{attributes_set}。禁止擅自添加其他属性。
除非是非确定，否则不要使用 eq 进行比较，鼓励多使用 like 或 in 的语句进行模糊匹配，并尽量多地将模糊匹配应用到所有属性中。
仅在需要时使用过滤器。如果没有可应用的过滤器，请为过滤器值返回 "NO_FILTER"。

<< 数据源 >>
```json
{content_and_attributes}
```
